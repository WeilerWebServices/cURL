#!/usr/bin/perl

# NOTE:
#
# This accesses the web site git repo to find the 'vuln.pm' file with the
# proper meta-data!
#
# Shows the number of days each CVE was present in a curl release before
# fixed.
#

my $webroot = $ARGV[0] || "../curl-www";

require "$webroot/docs/vuln.pm";
$csv = "$webroot/docs/releases.csv";

sub relinfo {
    open(C, "<$csv");
    while(<C>) {
        chomp;
        my ($index, $version, $vulns, $date, $since, $ddays, $adays, $dbugs, $abugs,
            $dchanges, $achanges) = split(';', $_);
        $release{$version}=$date;
        push @inorder, $version;
        $p = $date; # remmeber the last date, which is the earliest
    }
    close(C);
}

relinfo();

sub deltadays {
    my ($prev, $date) = @_;
    my $psecs = `date +%s -d "$prev"`;
    my $secs = `date +%s -d "$date"`;
    return int(($secs-$psecs)/86400);
}

my $amount = 0;
my $prevdate = "1998-03-20";
my $flaws;
for(reverse @vuln) {
    my ($id, $start, $stop, $desc, $cve, $date)=split('\|');
    if($date =~ /^(\d\d\d\d)(\d\d)(\d\d)/) {
        ($y, $m, $d)=(0+$1, 0+$2, 0+$3);
        $date = sprintf("%04d-%02d-%02d", $y, $m, $d);
    }
    # CVE, date, flaw period, project age, days since prev CVE, total count
    printf "%s;%s;%d;%d;%d;%d\n", $cve, $date, deltadays($release{$start}, $date),
        deltadays("1998-03-20", $date),
        deltadays($prevdate, $date),
        ++$flaws;
    $prevdate = $date;
}

my ($sec,$min,$hour,$mday,$mon,$year,$wday,$yday,$isdst) =
    localtime(time);
$date = sprintf "%04d-%02d-%02d", $year + 1900, $mon + 1, $mday;

# CVE, date, flaw period, project age, days since prev CVE, total count
printf "%s;%s;%d;%d;%d;%d\n", "now", $date, 0,
    deltadays("1998-03-20", $date),
    deltadays($prevdate, $date),
    $flaws;

